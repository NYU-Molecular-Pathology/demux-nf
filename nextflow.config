// params.output_dir = "output"
params.workflow_label = "Demultiplexing"
manifest {
    author = 'Stephen Kelly'
    homePage = 'https://github.com/NYU-Molecular-Pathology/demux-nf'
    description = 'Illumina bcl2fastq demultiplexing pipeline'
    mainScript = 'main.nf'
}

report {
    enabled = true
    file = "nextflow-report.html"
}

trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes"
    file = "trace.txt"
    raw = true
}

timeline {
    enabled = true
    file = "timeline-report.html"
}



username = System.getProperty("user.name")
params.email_host = "nyumc.org"
params.email_from = "${username}@${params.email_host}"
params.email_to = "${username}@${params.email_host}"
params.pipeline_email = true

notification {
    enabled = true
    to = "${params.email_to}"
    from = "${params.email_from}"
}



params.beforeScript_str = 'printf "USER:\${USER:-none} JOB_ID:\${JOB_ID:-none} JOB_NAME:\${JOB_NAME:-none} HOSTNAME:\${HOSTNAME:-none} PWD:\$PWD\n"; TIMESTART=\$(date +%s)'
process.beforeScript = "${params.beforeScript_str}"

// locations to run the pipeline
profiles {

    phoenix { // for NYULMC phoenix HPC
        // process.queue = 'clinical.q' // experimental queue
        process.queue = 'all.q'

        params.sequencer_dir = "/ifs/data/molecpathlab/quicksilver"
        params.production_dir = "/ifs/data/molecpathlab/production/Demultiplexing"

        params.multiqc_makefile = new File("bin/multiqc.makefile").getCanonicalPath()
        params.multiqc_requirements_txt = new File("bin/multiqc.requirements.txt").getCanonicalPath()
        // params.multiqc_setup_cmd = "make -f ${params.multiqc_makefile} setup REQ_FILE=${params.multiqc_requirements_txt} ; export PS=\${PS:-''} ; export PS1=\${PS1:-''} ; export PYTHONPATH= ; source multiqc-venv/bin/activate"
        params.multiqc_setup_cmd = 'module unload python'
        params.multiqc_disable = true


        process.$validate_samplesheet.module = "python/2.7"

        process.$bcl2fastq.module = "bcl2fastq/2.17.1"
        process.$bcl2fastq.executor = "sge"
        process.$bcl2fastq.clusterOptions = "-pe threaded 4-16 -l mem_free=32G -l mem_token=2G"

        process.$multiqc.module = 'metaseq/0.5.5.4'
        process.$multiqc.beforeScript = "${process.beforeScript} ; ${params.multiqc_setup_cmd}"

        process.$fastqc.module = "fastqc/0.11.7"
        process.$fastqc.executor = "sge"
        process.$fastqc.clusterOptions = "-l mem_free=8G -l mem_token=8G"

        process.$demultiplexing_report.module = "pandoc/1.13.1"
    }

}

// pipeline run settings
profiles {
    NGS580 {
        // phoenix location for auto-samplesheet detection:
        params.samplesheet = "/ifs/data/molecpathlab/quicksilver/to_be_demultiplexed/NGS580/${params.project}-SampleSheet.csv"
        params.bcl2fastq_params = "--ignore-missing-bcls --ignore-missing-filter --ignore-missing-positions --ignore-missing-controls --auto-set-to-zero-barcode-mismatches --find-adapters-with-sliding-window --adapter-stringency 0.9 --mask-short-adapter-reads 35 --minimum-trimmed-read-length 35"
    }

    Archer {
        // phoenix location for auto-samplesheet detection:
        params.samplesheet = "/ifs/data/molecpathlab/quicksilver/to_be_demultiplexed/Archer/${params.project}-SampleSheet.csv"
        params.bcl2fastq_params = "--no-lane-splitting"
    }
}
